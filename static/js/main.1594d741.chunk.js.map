{"version":3,"sources":["components/header/LoggedInUser.js","components/header/Logo.js","components/utils/getApiRoute.js","components/header/OtherUser.js","components/header/Header.js","components/Login.js","components/utils/generateNewToken.js","components/stocks/StockCard.js","components/stocks/AddStock.js","components/stocks/SharePortfolio.js","components/stocks/StockPortfolio.js","components/Body.js","components/Footer.js","App.js","index.js"],"names":["LoggedInUser","props","signOut","useGoogleLogout","clientId","process","onLogoutSuccess","res","loginUser","window","location","reload","onFailure","console","error","style","display","justifyContent","alignItems","flex","Object","keys","user","length","flexDirection","Typography","variant","sx","margin","Button","size","onClick","Avatar","src","slice","marginLeft","height","width","Logo","navigate","useNavigate","cursor","color","CircularProgress","value","updateProgress","marginTop","marginBottom","getApiRoute","route","OtherUser","useState","otherUser","setOtherUser","useEffect","otherUserID","axios","post","headers","then","data","catch","err","log","Header","AppBar","position","backgroundColor","padding","Toolbar","portfolioID","Login","useGoogleLogin","onSuccess","authenticate","a","tokenId","timing","tokenObj","expires_in","refreshToken","reloadAuthResponse","newResponse","setTimeout","generateNewToken","isSignedIn","cookiePolicy","signIn","Container","marginRight","PriceText","styled","pricechange","StockCard","Card","textShadow","maxWidth","ticker","name","priceChange","currentPrice","toFixed","shared","Fab","top","right","removeStock","id","TickerInput","TextField","outlinedInputClasses","root","notchedOutline","borderColor","focused","input","inputLabelClasses","outlined","AddStock","anchorEl","setAnchorEl","newTicker","setNewTicker","fetchingStock","setFetchingStock","openAlert","setOpenAlert","success","setSuccess","handleCloseAlert","submitTicker","newStock","user_id","open","Boolean","undefined","Tooltip","title","bottom","e","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","label","disabled","onChange","target","onKeyDown","key","Snackbar","autoHideDuration","Alert","severity","AlertTitle","SharePortfolio","sharableLink","userID","navigator","clipboard","writeText","StockPortfolio","stockData","setStockData","loading","setLoading","updateStockData","FormData","set","resetCounter","remove","old","splice","setInterval","textAlign","Grid","container","spacing","map","stock","idx","item","newStocks","Body","isLoggedIn","Footer","href","rel","App","params","useParams","setUpdateProgress","setUser","axiosRetry","retries","retryDelay","retryCount","updateCounter","current","progressAnim","get","className","paddingTop","clearInterval","ReactDOM","render","StrictMode","basename","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.1594d741.chunk.js","sourcesContent":["import { Avatar, Button, Typography } from '@mui/material';\nimport { useGoogleLogout } from 'react-google-login';\n\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n\nconst LoggedInUser = (props) => {\n  const onLogoutSuccess = (res) => {\n    props.loginUser({});\n    window.location.reload();\n  };\n\n  const onFailure = () => {\n    console.error('LOGOUT FAILED!!!');\n  };\n\n  const { signOut } = useGoogleLogout({\n    clientId,\n    onLogoutSuccess,\n    onFailure\n  });\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        flex: 1\n      }}\n    >\n      {Object.keys(props.user).length !== 0 && (\n        <>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-end'\n            }}\n          >\n            <Typography variant=\"overline\" sx={{ margin: 0 }}>\n              Hello, {props.user['name'] || ''}\n            </Typography>\n            <Button size=\"small\" sx={{ margin: 0 }} onClick={signOut}>\n              LOGOUT\n            </Button>\n          </div>\n          <Avatar\n            src={props.user['picture'].slice(0, -6)}\n            sx={{ marginLeft: '1em', height: '2.5em', width: '2.5em' }}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default LoggedInUser;\n","import { CircularProgress, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\n\nconst Logo = (props) => {\n  const navigate = useNavigate();\n  return (\n    <div style={{ display: 'flex', flexDirection: 'row', flex: 1 }}>\n      <div>\n        <Typography\n          variant=\"h3\"\n          sx={{ margin: 0, cursor: 'pointer' }}\n          onClick={() => {\n            navigate('/');\n            window.location.reload();\n          }}\n        >\n          Moonlit\n        </Typography>\n        <Typography variant=\"subtitle1\" sx={{ margin: 0, color: '#FFD700' }}>\n          To the moon, To the stars...\n        </Typography>\n      </div>\n      <CircularProgress\n        variant=\"determinate\"\n        value={props.updateProgress}\n        sx={{ marginTop: 'auto', marginBottom: 'auto' }}\n      />\n    </div>\n  );\n};\n\nexport default Logo;\n","/**\n * Gets a path to the desired Moonlit API route.\n * @param {string} route The specific route to go to.\n * @returns {string} A route from the Moonlit API.\n */\nconst getApiRoute = (route = '') => process.env.REACT_APP_API_URL + route;\n\nexport default getApiRoute;\n","import { Avatar, Typography } from '@mui/material';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport getApiRoute from '../utils/getApiRoute';\n\n/**\n * Displays info of the shared portfolio\n * @typedef OtherUserProps\n * @property {str} otherUserID The User ID of the other person's portfolio.\n * @param {OtherUserProps} props\n * @returns Component that displays information regarding shared portfolio.\n */\nconst OtherUser = (props) => {\n  const [otherUser, setOtherUser] = useState({});\n\n  const getOtherUser = () => {\n    axios\n      .post(getApiRoute('userinfo'), props.otherUserID, {\n        headers: { 'Content-Type': 'text/plain' }\n      })\n      .then((res) => {\n        setOtherUser(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    if (props.otherUserID) getOtherUser();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flex: 1,\n        flexDirection: 'column'\n      }}\n    >\n      {Object.keys(otherUser).length !== 0 && (\n        <>\n          <Avatar\n            src={otherUser['picture'].slice(0, -6)}\n            style={{ marginBottom: '1vh' }}\n          />\n          <Typography>Viewing {otherUser['name']}'s Portfolio</Typography>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default OtherUser;\n","import AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport LoggedInUser from './LoggedInUser';\nimport Logo from './Logo';\nimport OtherUser from './OtherUser';\n\n/**\n * The App Bar at the top of the page.\n * @typedef HeaderProps\n * @property {int} updateProgress An integer (0-100) that indcates\n *    how filled the update progress circle is.\n * @property {Object} user The current logged in user.\n * @property {str} portfolioID Another user's portfolio\n * @property {function} loginUser Sets the current logged in user state.\n * @param {HeaderProps} props Includes the progress until next update.\n * @returns The header at the top of the page.\n */\nconst Header = (props) => {\n  return (\n    <AppBar\n      position=\"sticky\"\n      sx={{\n        backgroundColor: '#37425B',\n        padding: '0.25em'\n      }}\n    >\n      <Toolbar\n        sx={{\n          display: 'flex'\n        }}\n      >\n        <Logo updateProgress={props.updateProgress} />\n        <OtherUser otherUserID={props.portfolioID} />\n        <LoggedInUser user={props.user} loginUser={props.loginUser} />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import { Button, Container, Typography } from '@mui/material';\nimport axios from 'axios';\nimport { useGoogleLogin } from 'react-google-login';\nimport { generateNewToken } from './utils/generateNewToken';\nimport GoogleIcon from '@mui/icons-material/Google';\nimport getApiRoute from './utils/getApiRoute';\n\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n\n/**\n * The login introduction screen to Moonlit\n * @typedef LoginProps\n * @property {function} loginUser Sets the current logged in user state.\n * @param {LoginProps} props\n * @returns A basic screen prompting user to login with Google.\n */\nconst Login = (props) => {\n  const onSuccess = (res) => {\n    const authenticate = async () => {\n      try {\n        await axios\n          .post(getApiRoute(), res.tokenId, {\n            headers: { 'Content-Type': 'text/plain' }\n          })\n          .then((user) => {\n            // Insert state here\n            props.loginUser(user.data);\n          });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    authenticate();\n    generateNewToken(res);\n  };\n\n  const onFailure = (res) => {\n    console.log('LOGIN FAILED');\n    console.log(res);\n  };\n\n  const { signIn } = useGoogleLogin({\n    onSuccess,\n    onFailure,\n    clientId,\n    isSignedIn: true,\n    cookiePolicy: 'single_host_origin'\n  });\n\n  return (\n    <Container>\n      <Typography variant=\"h3\" color={'#FFFFFF'}>\n        Welcome to Moonlit!\n      </Typography>\n      <Typography variant=\"subtitle1\" color={'#FFFFFF'}>\n        A place to keep track of all of your stocks.\n      </Typography>\n      <Button onClick={signIn} size=\"large\" variant=\"contained\">\n        <GoogleIcon sx={{ marginRight: '0.5em' }} />\n        Login With Google\n      </Button>\n    </Container>\n  );\n};\n\nexport default Login;\n","// From: https://dev.to/sivaneshs/add-google-login-to-your-react-apps-in-10-mins-4del\nexport const generateNewToken = (res) => {\n  let timing = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n\n  const refreshToken = async () => {\n    const newResponse = await res.reloadAuthResponse();\n    timing = (newResponse.expires_in || 3600 - 5 * 60) * 1000;\n    setTimeout(refreshToken, timing);\n  };\n  setTimeout(refreshToken, timing);\n};\n","import { Card, Fab, Typography } from '@mui/material';\nimport { styled } from '@mui/system';\nimport RemoveIcon from '@mui/icons-material/Remove';\n\nconst PriceText = styled(Typography)`\n  color: ${(props) => {\n    if (props.pricechange >= 0) return '#18BC9D';\n    else return '#DF9DC1';\n  }};\n`;\n\n/**\n * A small card that displays quick information regarding a stock.\n * @typedef CardProps\n * @property {int} id The stock's id number (used for removal).\n * @property {string} ticker The stock ticker.\n * @property {string} name The name of the company.\n * @property {float} currentPrice The current price of the stock.\n * @property {float} priceChange The change in price of the stock (+/-).\n * @property {function} removeStock Function to remove stock from portfolio.\n * @property {boolean} shared Disables the remove stock button when viewing\n *    shared portfolio\n * @param {CardProps} props - Contains the information to display.\n * @returns A small UI Card that shows, at a glance, the current stock price\n *    and the trend.\n */\nconst StockCard = (props) => {\n  const remove = () => {\n    props.removeStock(props.id);\n  };\n\n  return (\n    <Card\n      sx={{\n        backgroundColor: '#1D6988',\n        color: 'white',\n        textShadow: '1px 1px #333333',\n        width: '100vw',\n        maxWidth: '220px',\n        padding: '1em',\n        position: 'relative'\n      }}\n    >\n      <Typography variant=\"h4\">{props.ticker}</Typography>\n      <Typography variant=\"caption\">{props.name}</Typography>\n      <PriceText variant=\"h6\" pricechange={props.priceChange}>\n        ${props.currentPrice.toFixed(2) || 0.0} (\n        {props.priceChange > 0\n          ? '+$' + props.priceChange.toFixed(2)\n          : '-$' + (props.priceChange * -1).toFixed(2)}\n        )\n      </PriceText>\n      {!props.shared && (\n        <Fab\n          size=\"small\"\n          color=\"secondary\"\n          aria-label=\"remove-stock\"\n          sx={{ position: 'absolute', top: 10, right: 10 }}\n          onClick={remove}\n        >\n          <RemoveIcon />\n        </Fab>\n      )}\n    </Card>\n  );\n};\n\nexport default StockCard;\n","import { useState } from 'react';\nimport {\n  Container,\n  Fab,\n  Popover,\n  Tooltip,\n  TextField,\n  outlinedInputClasses,\n  inputLabelClasses,\n  Button,\n  Snackbar,\n  Alert,\n  AlertTitle\n} from '@mui/material';\nimport { styled } from '@mui/system';\nimport AddIcon from '@mui/icons-material/Add';\nimport axios from 'axios';\nimport getApiRoute from '../utils/getApiRoute';\n\n// From: https://stackoverflow.com/questions/58963242/change-border-color-on-material-ui-textfield\nexport const TickerInput = styled(TextField)({\n  [`& .${outlinedInputClasses.root} .${outlinedInputClasses.notchedOutline}`]: {\n    borderColor: 'white'\n  },\n  [`&:hover .${outlinedInputClasses.root} .${outlinedInputClasses.notchedOutline}`]:\n    {\n      borderColor: 'white'\n    },\n  [`& .${outlinedInputClasses.root}.${outlinedInputClasses.focused} .${outlinedInputClasses.notchedOutline}`]:\n    {\n      borderColor: 'white'\n    },\n  [`& .${outlinedInputClasses.input}`]: {\n    color: 'white'\n  },\n  [`&:hover .${outlinedInputClasses.input}`]: {\n    color: 'white'\n  },\n  [`& .${outlinedInputClasses.root}.${outlinedInputClasses.focused} .${outlinedInputClasses.input}`]:\n    {\n      color: 'white'\n    },\n  [`& .${inputLabelClasses.outlined}`]: {\n    color: 'white'\n  },\n  [`&:hover .${inputLabelClasses.outlined}`]: {\n    color: 'white'\n  },\n  [`& .${inputLabelClasses.outlined}.${inputLabelClasses.focused}`]: {\n    color: 'white'\n  }\n});\n\n/**\n * Lets the user add stocks to their portfolio.\n * @typedef AddStockProps\n * @property {Object} user The current logged in user.\n * @param {AddStockProps} props\n * @returns A button on the bottom right to let user add stocks.\n */\nconst AddStock = (props) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [newTicker, setNewTicker] = useState('');\n  const [fetchingStock, setFetchingStock] = useState(false);\n\n  const [openAlert, setOpenAlert] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const handleOpen = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleTicker = (e) => {\n    setNewTicker(e.target.value);\n  };\n\n  const handleCloseAlert = () => {\n    setOpenAlert(false);\n  };\n\n  const submitTicker = async () => {\n    setFetchingStock(true);\n    const newStock = {\n      ticker: newTicker,\n      user_id: props.user['sub']\n    };\n    await axios.post(getApiRoute('add'), newStock).then((res) => {\n      if (typeof res.data !== 'string') {\n        props.newTicker(res.data);\n        setSuccess(true);\n      } else {\n        setSuccess(false);\n      }\n      setFetchingStock(false);\n    });\n\n    setOpenAlert(true);\n    setNewTicker('');\n  };\n\n  const open = Boolean(anchorEl);\n  const id = anchorEl ? 'simple-popover' : undefined;\n  return (\n    <>\n      <Tooltip title=\"Add Stock\">\n        <Fab\n          size=\"medium\"\n          color=\"primary\"\n          aria-label=\"add-stock\"\n          sx={{ position: 'fixed', right: 20, bottom: 20 }}\n          onClick={handleOpen}\n        >\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n      <Popover\n        id={id}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        transformOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n      >\n        <Container\n          sx={{\n            backgroundColor: '#343435',\n            padding: '1em 2em',\n            display: 'flex',\n            justifyContent: 'space-evenly'\n          }}\n        >\n          <TickerInput\n            id=\"outlined-basic\"\n            label=\"Enter Stock Ticker\"\n            variant=\"outlined\"\n            value={newTicker}\n            disabled={fetchingStock}\n            onChange={handleTicker}\n            sx={{ marginRight: '1em' }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                submitTicker();\n              }\n            }}\n          />\n          <Button\n            variant=\"outlined\"\n            disabled={fetchingStock}\n            onClick={submitTicker}\n          >\n            Add Stock\n          </Button>\n        </Container>\n      </Popover>\n      <Snackbar\n        open={openAlert}\n        onClose={handleCloseAlert}\n        autoHideDuration={5000}\n      >\n        {success ? (\n          <Alert onClose={handleCloseAlert} severity=\"success\">\n            <AlertTitle>SUCCESS!!!</AlertTitle>\n            Stock was successfully added!\n          </Alert>\n        ) : (\n          <Alert onClose={handleCloseAlert} severity=\"error\">\n            <AlertTitle>ERROR!!!</AlertTitle>\n            Stock was NOT FOUND!\n          </Alert>\n        )}\n      </Snackbar>\n    </>\n  );\n};\n\nexport default AddStock;\n","import { Button, Container, Fab, Popover, Tooltip } from '@mui/material';\nimport ShareIcon from '@mui/icons-material/Share';\nimport { useState } from 'react';\nimport { TickerInput as LinkDisplay } from './AddStock';\n\n/**\n * @typedef SharePortfolioProps\n * @property {str} userID The current user's Google ID number\n * @param {SharePortfolioProps} props\n * @returns A button to get a sharable link for the user's portfolio\n */\nconst SharePortfolio = (props) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleOpen = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = anchorEl ? 'simple-popover' : undefined;\n  const sharableLink =\n    process.env.REACT_APP_URL + '#/portfolio/' + props.userID;\n  return (\n    <>\n      <Tooltip title=\"Share Portfolio Link\">\n        <Fab\n          size=\"medium\"\n          color=\"primary\"\n          aria-label=\"share-portfolio\"\n          sx={{ position: 'fixed', right: 85, bottom: 20 }}\n          onClick={handleOpen}\n        >\n          <ShareIcon />\n        </Fab>\n      </Tooltip>\n      <Popover\n        id={id}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        transformOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n      >\n        <Container\n          sx={{\n            backgroundColor: '#343435',\n            padding: '1em 2em',\n            display: 'flex',\n            justifyContent: 'space-evenly'\n          }}\n        >\n          <LinkDisplay\n            id=\"outlined-basic\"\n            value={sharableLink}\n            sx={{ marginRight: '1em' }}\n          />\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              navigator.clipboard.writeText(sharableLink);\n            }}\n          >\n            Copy URL\n          </Button>\n        </Container>\n      </Popover>\n    </>\n  );\n};\n\nexport default SharePortfolio;\n","import { Container, Grid, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport StockCard from './StockCard';\nimport AddStock from './AddStock';\nimport getApiRoute from '../utils/getApiRoute';\nimport SharePortfolio from './SharePortfolio';\n\n/**\n * The 'main screen' that displays all of the user's stocks.\n * @typedef PortfolioProps\n * @property {Object} user The current logged in user.\n * @property {str} portfolioID Used to view another user's portfolio\n * @property {Function} resetCounter Reset the progress once stocks update\n *    and restart animation.\n * @param {PortfolioProps} props\n * @returns A grid of stock cards, which display the user's stock portfolio.\n */\nconst StockPortfolio = (props) => {\n  const [stockData, setStockData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const newTicker = (newStocks) => {\n    setStockData(newStocks);\n    updateStockData();\n  };\n\n  const updateStockData = () => {\n    let userID = new FormData();\n    userID.set('user_id', props.portfolioID || props.user['sub']);\n    axios\n      .post(getApiRoute('update'), userID)\n      .then((res) => {\n        setStockData(res.data);\n        if (res.data.length > 0) props.resetCounter();\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const removeStock = (id) => {\n    const remove = {\n      ticker: stockData[id]['ticker'],\n      user_id: props.user['sub']\n    };\n    setStockData((old) => {\n      old.splice(id, 1);\n      return old;\n    });\n    axios.post(getApiRoute('remove'), remove).catch((err) => {\n      console.error(err);\n    });\n  };\n\n  useEffect(() => {\n    updateStockData();\n    setInterval(updateStockData, process.env.REACT_APP_API_UPDATE);\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return (\n      <Container sx={{ color: '#FFFFFF', textAlign: 'center' }}>\n        <Typography variant=\"h5\">Loading stocks...</Typography>\n      </Container>\n    );\n  }\n\n  return (\n    <Grid container spacing={2} justifyContent=\"center\">\n      {stockData.map((stock, idx) => {\n        return (\n          <Grid item key={idx}>\n            <StockCard\n              id={idx}\n              ticker={stock['ticker']}\n              name={stock['name']}\n              currentPrice={stock['price']}\n              priceChange={stock['change']}\n              removeStock={removeStock}\n              shared={props.portfolioID}\n            />\n          </Grid>\n        );\n      })}\n      {stockData.length === 0 && (\n        <Container sx={{ color: '#aaaaaa' }}>\n          <Typography variant=\"h4\">Nothing here!</Typography>\n          {!props.portfolioID && (\n            <Typography variant=\"overline\">\n              Try adding some stocks using the button in the bottom right!\n            </Typography>\n          )}\n        </Container>\n      )}\n      {!props.portfolioID && (\n        <>\n          <SharePortfolio userID={props.user['sub']} />\n          <AddStock user={props.user} newTicker={newTicker} />\n        </>\n      )}\n    </Grid>\n  );\n};\n\nexport default StockPortfolio;\n","import Login from './Login';\nimport StockPortfolio from './stocks/StockPortfolio';\n\n/**\n * The main body of the web app.\n * @typedef BodyProps\n * @property {function} loginUser Sets the current logged in user state.\n * @property {Object} user The current logged in user.\n * @property {boolean} isLoggedIn Either show user's portfolio or login screen.\n * @property {function} resetCounter Resets the circular update timer.\n * @property {str} portfolioID Another user's portfolio\n * @param {BodyProps} props\n * @returns The main body of the web app.\n */\nconst Body = (props) => {\n  if (!props.isLoggedIn && !props.portfolioID) {\n    return <Login loginUser={props.loginUser} />;\n  }\n  return (\n    <StockPortfolio\n      user={props.user}\n      resetCounter={props.resetCounter}\n      portfolioID={props.portfolioID}\n    />\n  );\n};\n\nexport default Body;\n","import { Typography } from '@mui/material';\n\nconst Footer = () => {\n  return (\n    <div style={{ position: 'fixed', bottom: 5, color: '#aaaaaa' }}>\n      <Typography variant=\"overline\">\n        © 2021 John Mabanta ·{' '}\n        <a\n          href=\"https://github.com/jmmabanta/moonlit\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          style={{ color: '#aaaaaa' }}\n        >\n          SOURCE CODE\n        </a>\n      </Typography>\n    </div>\n  );\n};\n\nexport default Footer;\n","import Container from '@mui/material/Container';\nimport Header from './components/header/Header';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport { useEffect, useState } from 'react';\nimport Body from './components/Body';\nimport getApiRoute from './components/utils/getApiRoute';\nimport { useParams } from 'react-router-dom';\nimport Footer from './components/Footer';\n\nconst App = () => {\n  const params = useParams();\n\n  const [loading, setLoading] = useState(true);\n  const [updateProgress, setUpdateProgress] = useState(0);\n  const [user, setUser] = useState({});\n\n  // Wake Heroku API\n  axiosRetry(axios, {\n    retries: 999,\n    retryDelay: (retryCount) => retryCount * 1000\n  });\n\n  const updateCounter = () => {\n    setUpdateProgress((current) => (current < 100 ? (current += 5) : current));\n  };\n\n  // Manage the circular progress bar to next stock info update\n  let progressAnim = null;\n  const resetCounter = () => {\n    if (progressAnim !== null) {\n      clearInterval(progressAnim);\n      progressAnim = null;\n    }\n    setUpdateProgress(10);\n    progressAnim = setInterval(\n      updateCounter,\n      process.env.REACT_APP_API_UPDATE / 20\n    );\n  };\n\n  const loginUser = (user) => {\n    setUser(user);\n  };\n\n  // Display loading message while waking/connecting to API\n  useEffect(() => {\n    axios\n      .get(getApiRoute())\n      .then((res) => {\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n  if (loading) return <h1>Loading...</h1>;\n\n  return (\n    <div className=\"App\">\n      <Header\n        updateProgress={updateProgress}\n        user={user}\n        portfolioID={params.id}\n        isLoggedIn={!user || Object.keys(user).length !== 0}\n        loginUser={loginUser}\n      />\n      <Container maxWidth=\"none\" sx={{ paddingTop: '2em' }}>\n        <Body\n          isLoggedIn={!user || Object.keys(user).length !== 0}\n          loginUser={loginUser}\n          user={user}\n          resetCounter={resetCounter}\n          portfolioID={params.id}\n        />\n        <Footer />\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Routes, HashRouter, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename=\"/\">\n      <Routes>\n        {['/', '/portfolio/:id'].map((path, idx) => (\n          <Route path={path} element={<App />} key={idx} />\n        ))}\n      </Routes>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}