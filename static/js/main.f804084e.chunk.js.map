{"version":3,"sources":["components/Header.js","components/stocks/StockCard.js","components/stocks/StockPortfolio.js","App.js","index.js"],"names":["Header","AppBar","position","Toolbar","Typography","variant","sx","flexGrow","PriceText","styled","props","pricechange","StockCard","Card","width","maxWidth","padding","ticker","name","priceChange","currentPrice","StockPortfolio","Grid","container","spacing","justifyContent","item","App","useState","loading","setLoading","axiosRetry","axios","retries","retryDelay","retryCount","useEffect","get","process","then","res","console","log","data","catch","err","error","className","Container","paddingTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAgBeA,EAZA,WACb,OACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,GAAI,CAAEC,SAAU,GAAzC,0B,mCCLFC,EAAYC,YAAOL,IAAPK,CAAH,2CACJ,SAACC,GACR,OAAIA,EAAMC,aAAe,EAAU,UACvB,aA+BDC,EAZG,SAACF,GACjB,OACE,eAACG,EAAA,EAAD,CAAMP,GAAI,CAAEQ,MAAO,QAASC,SAAU,QAASC,QAAS,OAAxD,UACE,cAACZ,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BK,EAAMO,SAChC,cAACb,EAAA,EAAD,CAAYC,QAAQ,UAApB,SAA+BK,EAAMQ,OACrC,eAACV,EAAD,CAAWH,QAAQ,KAAKM,YAAaD,EAAMS,YAA3C,cACIT,EAAMU,cAAgB,EAD1B,KACiCV,EAAMS,aAAe,EADtD,WCoCSE,EA/DQ,WACrB,OACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,eAAe,SAA3C,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAAC,EAAD,CACET,OAAO,OACPC,KAAK,aACLE,aAAc,OACdD,aAAc,SAGlB,cAACG,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAAC,EAAD,CACET,OAAO,MACPC,KAAK,iBACLE,aAAc,OACdD,aAAc,SAGlB,cAACG,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAAC,EAAD,CACET,OAAO,MACPC,KAAK,aACLE,aAAc,OACdD,YAAa,QAGjB,cAACG,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAAC,EAAD,CACET,OAAO,OACPC,KAAK,mBACLE,aAAc,QACdD,aAAc,UAGlB,cAACG,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAAC,EAAD,CACET,OAAO,OACPC,KAAK,gBACLE,aAAc,OACdD,YAAa,QAGjB,cAACG,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAAC,EAAD,CACET,OAAO,OACPC,KAAK,cACLE,aAAc,OACdD,YAAa,SAGjB,cAACG,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAAC,EAAD,CACET,OAAO,KACPC,KAAK,iBACLE,aAAc,OACdD,aAAc,c,kCCnBTQ,MAjCf,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,KAqBb,OAlBAC,IAAWC,IAAO,CAChBC,QAAS,IACTC,WAAY,SAACC,GAAD,OAA6B,IAAbA,KAG9BC,qBAAU,WACRJ,IACGK,IAAIC,sCACJC,MAAK,SAACC,GACLC,QAAQC,IAAI,cACZD,QAAQC,IAAIF,EAAIG,MAChBb,GAAW,MAEZc,OAAM,SAACC,GACNJ,QAAQK,MAAMD,QAEjB,IAEChB,EAAgB,4CAGlB,sBAAKkB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,CAAWjC,SAAS,OAAOT,GAAI,CAAE2C,WAAY,OAA7C,SACE,cAAC,EAAD,UC7BRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f804084e.chunk.js","sourcesContent":["import AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\n\nconst Header = () => {\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <Typography variant=\"h4\" sx={{ flexGrow: 1 }}>\n          Moonlit\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import { Card, Typography } from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst PriceText = styled(Typography)`\n  color: ${(props) => {\n    if (props.pricechange >= 0) return '#00aa00';\n    else return '#ff0000';\n  }};\n`;\n\n/**\n * @typedef CardProps\n * @property {string} ticker The stock ticker.\n * @property {string} name The name of the company.\n * @property {float} currentPrice The current price of the stock.\n * @property {float} priceChange The change in price of the stock (+/-).\n */\n\n/**\n * A small card that displays quick information regarding a stock.\n * @component\n * @param {CardProps} props - Contains the information to display.\n * @returns A small UI Card that shows, at a glance, the current stock price\n *          and the trend.\n */\nconst StockCard = (props) => {\n  return (\n    <Card sx={{ width: '100vw', maxWidth: '220px', padding: '1em' }}>\n      <Typography variant=\"h4\">{props.ticker}</Typography>\n      <Typography variant=\"caption\">{props.name}</Typography>\n      <PriceText variant=\"h6\" pricechange={props.priceChange}>\n        ${props.currentPrice || 0.0} ({props.priceChange || 0.0})\n      </PriceText>\n    </Card>\n  );\n};\n\nexport default StockCard;\n","import { Grid } from '@mui/material';\nimport StockCard from './StockCard';\n\nconst StockPortfolio = () => {\n  return (\n    <Grid container spacing={2} justifyContent=\"center\">\n      <Grid item>\n        <StockCard\n          ticker=\"AAPL\"\n          name=\"Apple Inc.\"\n          currentPrice={139.14}\n          priceChange={-1.39}\n        />\n      </Grid>\n      <Grid item>\n        <StockCard\n          ticker=\"GME\"\n          name=\"GameStop Corp.\"\n          currentPrice={171.36}\n          priceChange={-5.55}\n        />\n      </Grid>\n      <Grid item>\n        <StockCard\n          ticker=\"NKE\"\n          name=\"NIKE, Inc.\"\n          currentPrice={147.14}\n          priceChange={0.04}\n        />\n      </Grid>\n      <Grid item>\n        <StockCard\n          ticker=\"AMZN\"\n          name=\"Amazon.com, Inc.\"\n          currentPrice={3189.78}\n          priceChange={-93.48}\n        />\n      </Grid>\n      <Grid item>\n        <StockCard\n          ticker=\"GOOG\"\n          name=\"Alphabet Inc.\"\n          currentPrice={2675.3}\n          priceChange={9.7}\n        />\n      </Grid>\n      <Grid item>\n        <StockCard\n          ticker=\"TSLA\"\n          name=\"Tesla, Inc.\"\n          currentPrice={781.53}\n          priceChange={6.31}\n        />\n      </Grid>\n      <Grid item>\n        <StockCard\n          ticker=\"FB\"\n          name=\"Facebook, Inc.\"\n          currentPrice={326.23}\n          priceChange={-16.78}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default StockPortfolio;\n","import Container from '@mui/material/Container';\nimport Header from './components/Header';\nimport StockPortfolio from './components/stocks/StockPortfolio';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n\n  axiosRetry(axios, {\n    retries: 999,\n    retryDelay: (retryCount) => retryCount * 1000\n  });\n\n  useEffect(() => {\n    axios\n      .get(process.env.REACT_APP_API_URL)\n      .then((res) => {\n        console.log('CONNECTED!');\n        console.log(res.data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  if (loading) return <h1>Loading...</h1>;\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container maxWidth=\"none\" sx={{ paddingTop: '2em' }}>\n        <StockPortfolio />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}