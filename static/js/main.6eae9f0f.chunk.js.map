{"version":3,"sources":["components/Header.js","components/utils/getApiRoute.js","components/Login.js","components/utils/generateNewToken.js","components/stocks/StockCard.js","components/stocks/AddStock.js","components/stocks/StockPortfolio.js","components/Body.js","App.js","index.js"],"names":["Header","props","signOut","useGoogleLogout","clientId","process","onLogoutSuccess","res","loginUser","window","location","reload","onFailure","console","error","AppBar","position","sx","backgroundColor","padding","Toolbar","style","display","flexDirection","flex","Typography","variant","margin","color","CircularProgress","value","updateProgress","marginTop","marginBottom","user","Object","keys","length","justifyContent","alignItems","Button","size","onClick","Avatar","src","substring","marginLeft","height","width","getApiRoute","route","Login","useGoogleLogin","onSuccess","authenticate","a","form","FormData","set","tokenId","axios","post","then","data","log","timing","tokenObj","expires_in","refreshToken","reloadAuthResponse","newResponse","setTimeout","generateNewToken","isSignedIn","cookiePolicy","signIn","Container","marginRight","PriceText","styled","pricechange","StockCard","Card","textShadow","maxWidth","ticker","name","priceChange","currentPrice","toFixed","Fab","top","right","removeStock","id","TickerInput","TextField","outlinedInputClasses","root","notchedOutline","borderColor","focused","input","inputLabelClasses","outlined","AddStock","useState","anchorEl","setAnchorEl","newTicker","setNewTicker","fetchingStock","setFetchingStock","openAlert","setOpenAlert","success","setSuccess","handleCloseAlert","submitTicker","open","Boolean","undefined","Tooltip","title","bottom","e","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","label","disabled","onChange","target","onKeyDown","key","Snackbar","autoHideDuration","Alert","severity","AlertTitle","StockPortfolio","stockData","setStockData","loading","setLoading","updateStockData","user_id","resetCounter","catch","err","removeForm","old","splice","useEffect","setInterval","textAlign","Grid","container","spacing","map","stock","idx","item","newStocks","Body","isLoggedIn","App","setUpdateProgress","setUser","axiosRetry","retries","retryDelay","retryCount","updateCounter","current","progressAnim","get","className","paddingTop","clearInterval","href","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6eae9f0f.chunk.js","sourcesContent":["import { Avatar, Button, CircularProgress } from '@mui/material';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { useGoogleLogout } from 'react-google-login';\n\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n\n/**\n * The App Bar at the top of the page.\n * @typedef HeaderProps\n * @property {int} updateProgress An integer (0-100) that indcates\n *    how filled the update progress circle is.\n * @property {Object} user The current logged in user.\n * @property {function} loginUser Sets the current logged in user state.\n * @param {HeaderProps} props Includes the progress until next update.\n * @returns The header at the top of the page.\n */\nconst Header = (props) => {\n  const onLogoutSuccess = (res) => {\n    props.loginUser({});\n    window.location.reload();\n  };\n\n  const onFailure = () => {\n    console.error('LOGOUT FAILED!!!');\n  };\n\n  const { signOut } = useGoogleLogout({\n    clientId,\n    onLogoutSuccess,\n    onFailure\n  });\n\n  return (\n    <AppBar\n      position=\"sticky\"\n      sx={{ backgroundColor: '#37425B', padding: '0.25em' }}\n    >\n      <Toolbar>\n        <div style={{ display: 'flex', flexDirection: 'row', flex: 1 }}>\n          <div>\n            <Typography variant=\"h3\" sx={{ margin: 0 }}>\n              Moonlit\n            </Typography>\n            <Typography\n              variant=\"subtitle1\"\n              sx={{ margin: 0, color: '#FFD700' }}\n            >\n              To the moon, To the stars...\n            </Typography>\n          </div>\n          <CircularProgress\n            variant=\"determinate\"\n            value={props.updateProgress}\n            sx={{ marginTop: 'auto', marginBottom: 'auto' }}\n          />\n        </div>\n        {(!props.user || Object.keys(props.user).length !== 0) && (\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-evenly',\n              alignItems: 'center'\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'flex-end'\n              }}\n            >\n              <Typography variant=\"overline\" sx={{ margin: 0 }}>\n                Hello, {props.user['name'] || ''}\n              </Typography>\n              <Button size=\"small\" sx={{ margin: 0 }} onClick={signOut}>\n                LOGOUT\n              </Button>\n            </div>\n            <Avatar\n              src={props.user['picture'].substring(\n                0,\n                props.user['picture'].length - 6\n              )}\n              sx={{ marginLeft: '1em', height: '2.5em', width: '2.5em' }}\n            />\n          </div>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","/**\n * Gets a path to the desired Moonlit API route.\n * @param {string} route The specific route to go to.\n * @returns {string} A route from the Moonlit API.\n */\nconst getApiRoute = (route = '') => process.env.REACT_APP_API_URL + route;\n\nexport default getApiRoute;\n","import { Button, Container, Typography } from '@mui/material';\nimport axios from 'axios';\nimport { useGoogleLogin } from 'react-google-login';\nimport { generateNewToken } from './utils/generateNewToken';\nimport GoogleIcon from '@mui/icons-material/Google';\nimport getApiRoute from './utils/getApiRoute';\n\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n\n/**\n * The login introduction screen to Moonlit\n * @typedef LoginProps\n * @property {function} loginUser Sets the current logged in user state.\n * @param {LoginProps} props\n * @returns A basic screen prompting user to login with Google.\n */\nconst Login = (props) => {\n  const onSuccess = (res) => {\n    const authenticate = async () => {\n      let form = new FormData();\n      form.set('token_id', res.tokenId);\n      try {\n        await axios.post(getApiRoute(), form).then((user) => {\n          // Insert state here\n          props.loginUser(user.data);\n          console.log(user.data);\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    authenticate();\n    generateNewToken(res);\n  };\n\n  const onFailure = (res) => {\n    console.log('LOGIN FAILED');\n    console.log(res);\n  };\n\n  const { signIn } = useGoogleLogin({\n    onSuccess,\n    onFailure,\n    clientId,\n    isSignedIn: true,\n    cookiePolicy: 'single_host_origin'\n  });\n\n  return (\n    <Container>\n      <Typography variant=\"h3\" color={'#FFFFFF'}>\n        Welcome to Moonlit!\n      </Typography>\n      <Typography variant=\"subtitle1\" color={'#FFFFFF'}>\n        A place to keep track of all of your stocks.\n      </Typography>\n      <Button onClick={signIn} size=\"large\" variant=\"contained\">\n        <GoogleIcon sx={{ marginRight: '0.5em' }} />\n        Login With Google\n      </Button>\n    </Container>\n  );\n};\n\nexport default Login;\n","// From: https://dev.to/sivaneshs/add-google-login-to-your-react-apps-in-10-mins-4del\nexport const generateNewToken = (res) => {\n  let timing = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n\n  const refreshToken = async () => {\n    const newResponse = await res.reloadAuthResponse();\n    timing = (newResponse.expires_in || 3600 - 5 * 60) * 1000;\n    setTimeout(refreshToken, timing);\n  };\n  setTimeout(refreshToken, timing);\n};\n","import { Card, Fab, Typography } from '@mui/material';\nimport { styled } from '@mui/system';\nimport RemoveIcon from '@mui/icons-material/Remove';\n\nconst PriceText = styled(Typography)`\n  color: ${(props) => {\n    if (props.pricechange >= 0) return '#18BC9D';\n    else return '#DF9DC1';\n  }};\n`;\n\n/**\n * A small card that displays quick information regarding a stock.\n * @typedef CardProps\n * @property {int} id The stock's id number (used for removal).\n * @property {string} ticker The stock ticker.\n * @property {string} name The name of the company.\n * @property {float} currentPrice The current price of the stock.\n * @property {float} priceChange The change in price of the stock (+/-).\n * @property {function} removeStock Function to remove stock from portfolio.\n * @param {CardProps} props - Contains the information to display.\n * @returns A small UI Card that shows, at a glance, the current stock price\n *          and the trend.\n */\nconst StockCard = (props) => {\n  const remove = () => {\n    props.removeStock(props.id);\n  };\n\n  return (\n    <Card\n      sx={{\n        backgroundColor: '#1D6988',\n        color: 'white',\n        textShadow: '1px 1px #333333',\n        width: '100vw',\n        maxWidth: '220px',\n        padding: '1em',\n        position: 'relative'\n      }}\n    >\n      <Typography variant=\"h4\">{props.ticker}</Typography>\n      <Typography variant=\"caption\">{props.name}</Typography>\n      <PriceText variant=\"h6\" pricechange={props.priceChange}>\n        ${props.currentPrice.toFixed(2) || 0.0} (\n        {props.priceChange > 0\n          ? '+$' + props.priceChange.toFixed(2)\n          : '-$' + (props.priceChange * -1).toFixed(2)}\n        )\n      </PriceText>\n      <Fab\n        size=\"small\"\n        color=\"secondary\"\n        aria-label=\"remove-stock\"\n        sx={{ position: 'absolute', top: 10, right: 10 }}\n        onClick={remove}\n      >\n        <RemoveIcon />\n      </Fab>\n    </Card>\n  );\n};\n\nexport default StockCard;\n","import { useState } from 'react';\nimport {\n  Container,\n  Fab,\n  Popover,\n  Tooltip,\n  TextField,\n  outlinedInputClasses,\n  inputLabelClasses,\n  Button,\n  Snackbar,\n  Alert,\n  AlertTitle\n} from '@mui/material';\nimport { styled } from '@mui/system';\nimport AddIcon from '@mui/icons-material/Add';\nimport axios from 'axios';\nimport getApiRoute from '../utils/getApiRoute';\n\n// From: https://stackoverflow.com/questions/58963242/change-border-color-on-material-ui-textfield\nconst TickerInput = styled(TextField)({\n  [`& .${outlinedInputClasses.root} .${outlinedInputClasses.notchedOutline}`]: {\n    borderColor: 'white'\n  },\n  [`&:hover .${outlinedInputClasses.root} .${outlinedInputClasses.notchedOutline}`]:\n    {\n      borderColor: 'white'\n    },\n  [`& .${outlinedInputClasses.root}.${outlinedInputClasses.focused} .${outlinedInputClasses.notchedOutline}`]:\n    {\n      borderColor: 'white'\n    },\n  [`& .${outlinedInputClasses.input}`]: {\n    color: 'white'\n  },\n  [`&:hover .${outlinedInputClasses.input}`]: {\n    color: 'white'\n  },\n  [`& .${outlinedInputClasses.root}.${outlinedInputClasses.focused} .${outlinedInputClasses.input}`]:\n    {\n      color: 'white'\n    },\n  [`& .${inputLabelClasses.outlined}`]: {\n    color: 'white'\n  },\n  [`&:hover .${inputLabelClasses.outlined}`]: {\n    color: 'white'\n  },\n  [`& .${inputLabelClasses.outlined}.${inputLabelClasses.focused}`]: {\n    color: 'white'\n  }\n});\n\n/**\n * Lets the user add stocks to their portfolio.\n * @typedef AddStockProps\n * @property {Object} user The current logged in user.\n * @param {AddStockProps} props\n * @returns A button on the bottom right to let user add stocks.\n */\nconst AddStock = (props) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [newTicker, setNewTicker] = useState('');\n  const [fetchingStock, setFetchingStock] = useState(false);\n\n  const [openAlert, setOpenAlert] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const handleOpen = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleTicker = (e) => {\n    setNewTicker(e.target.value);\n  };\n\n  const handleCloseAlert = () => {\n    setOpenAlert(false);\n  };\n\n  const submitTicker = async () => {\n    setFetchingStock(true);\n    let ticker = new FormData();\n    ticker.set('ticker', newTicker);\n    ticker.set('user_id', props.user['sub']);\n\n    await axios.post(getApiRoute('/add'), ticker).then((res) => {\n      if (typeof res.data !== 'string') {\n        props.newTicker(res.data);\n        setSuccess(true);\n      } else {\n        setSuccess(false);\n      }\n      setFetchingStock(false);\n    });\n\n    setOpenAlert(true);\n    setNewTicker('');\n  };\n\n  const open = Boolean(anchorEl);\n  const id = anchorEl ? 'simple-popover' : undefined;\n  return (\n    <>\n      <Tooltip title=\"Add Stock\">\n        <Fab\n          size=\"medium\"\n          color=\"primary\"\n          aria-label=\"add-stock\"\n          sx={{ position: 'fixed', right: 20, bottom: 20 }}\n          onClick={handleOpen}\n        >\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n      <Popover\n        id={id}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        transformOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n      >\n        <Container\n          sx={{\n            backgroundColor: '#343435',\n            color: 'white',\n            padding: '1em 2em',\n            display: 'flex',\n            flexDirection: 'column'\n          }}\n        >\n          <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\n            <TickerInput\n              id=\"outlined-basic\"\n              label=\"Enter Stock Ticker\"\n              variant=\"outlined\"\n              value={newTicker}\n              disabled={fetchingStock}\n              onChange={handleTicker}\n              sx={{ marginRight: '1em' }}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  submitTicker();\n                }\n              }}\n            />\n            <Button\n              variant=\"outlined\"\n              disabled={fetchingStock}\n              onClick={submitTicker}\n            >\n              Add Stock\n            </Button>\n          </div>\n        </Container>\n      </Popover>\n      <Snackbar\n        open={openAlert}\n        onClose={handleCloseAlert}\n        autoHideDuration={5000}\n      >\n        {success ? (\n          <Alert onClose={handleCloseAlert} severity=\"success\">\n            <AlertTitle>SUCCESS!!!</AlertTitle>\n            Stock was successfully added!\n          </Alert>\n        ) : (\n          <Alert onClose={handleCloseAlert} severity=\"error\">\n            <AlertTitle>ERROR!!!</AlertTitle>\n            Stock was NOT FOUND!\n          </Alert>\n        )}\n      </Snackbar>\n    </>\n  );\n};\n\nexport default AddStock;\n","import { Container, Grid, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport StockCard from './StockCard';\nimport AddStock from './AddStock';\nimport getApiRoute from '../utils/getApiRoute';\n\n/**\n * The 'main screen' that displays all of the user's stocks.\n * @typedef PortfolioProps\n * @property {Object} user The current logged in user.\n * @property {Function} resetCounter Reset the progress once stocks update\n *    and restart animation.\n * @param {PortfolioProps} props\n * @returns A grid of stock cards, which display the user's stock portfolio.\n */\nconst StockPortfolio = (props) => {\n  const [stockData, setStockData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const newTicker = (newStocks) => {\n    setStockData(newStocks);\n    updateStockData();\n  };\n\n  const updateStockData = () => {\n    let user_id = new FormData();\n    user_id.set('user_id', props.user['sub']);\n    axios\n      .post(getApiRoute('/update'), user_id)\n      .then((res) => {\n        console.log(res.data);\n        setStockData(res.data);\n        if (res.data.length > 0) props.resetCounter();\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const removeStock = (id) => {\n    const removeForm = new FormData();\n    removeForm.set('user_id', props.user['sub']);\n    removeForm.set('ticker', stockData[id]['ticker']);\n\n    setStockData((old) => {\n      old.splice(id, 1);\n      return old;\n    });\n\n    axios.post(getApiRoute('/remove'), removeForm);\n  };\n\n  useEffect(() => {\n    updateStockData();\n    setInterval(updateStockData, process.env.REACT_APP_API_UPDATE);\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return (\n      <Container sx={{ color: '#FFFFFF', textAlign: 'center' }}>\n        <Typography variant=\"h5\">Loading stocks...</Typography>\n      </Container>\n    );\n  }\n\n  return (\n    <Grid container spacing={2} justifyContent=\"center\">\n      {stockData.map((stock, idx) => {\n        return (\n          <Grid item key={idx}>\n            <StockCard\n              id={idx}\n              ticker={stock['ticker']}\n              name={stock['name']}\n              currentPrice={stock['price']}\n              priceChange={stock['change']}\n              removeStock={removeStock}\n            />\n          </Grid>\n        );\n      })}\n      {stockData.length === 0 && (\n        <Container sx={{ color: '#aaaaaa' }}>\n          <Typography variant=\"h4\">Nothing here!</Typography>\n          <Typography variant=\"overline\">\n            Try adding some stocks using the button in the bottom right!\n          </Typography>\n        </Container>\n      )}\n      <AddStock user={props.user} newTicker={newTicker} />\n    </Grid>\n  );\n};\n\nexport default StockPortfolio;\n","import Login from './Login';\nimport StockPortfolio from './stocks/StockPortfolio';\n\n/**\n * The main body of the web app.\n * @typedef BodyProps\n * @property {function} loginUser Sets the current logged in user state.\n * @property {Object} user The current logged in user.\n * @property {boolean} isLoggedIn Either show user's portfolio or login screen.\n * @property {function} resetCounter Resets the circular update timer.\n * @param {BodyProps} props\n * @returns The main body of the web app.\n */\nconst Body = (props) => {\n  if (!props.isLoggedIn) {\n    return <Login loginUser={props.loginUser} />;\n  }\n  return <StockPortfolio user={props.user} resetCounter={props.resetCounter} />;\n};\n\nexport default Body;\n","import Container from '@mui/material/Container';\nimport Header from './components/Header';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport { useEffect, useState } from 'react';\nimport Body from './components/Body';\nimport { Typography } from '@mui/material';\nimport getApiRoute from './components/utils/getApiRoute';\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n  const [updateProgress, setUpdateProgress] = useState(0);\n\n  const [user, setUser] = useState({});\n\n  axiosRetry(axios, {\n    retries: 999,\n    retryDelay: (retryCount) => retryCount * 1000\n  });\n\n  const updateCounter = () => {\n    setUpdateProgress((current) => (current < 100 ? (current += 5) : current));\n  };\n\n  let progressAnim = null;\n  const resetCounter = () => {\n    if (progressAnim !== null) {\n      clearInterval(progressAnim);\n      progressAnim = null;\n    }\n    setUpdateProgress(10);\n    progressAnim = setInterval(\n      updateCounter,\n      process.env.REACT_APP_API_UPDATE / 20\n    );\n  };\n\n  const loginUser = (user) => {\n    setUser(user);\n  };\n\n  useEffect(() => {\n    axios\n      .get(getApiRoute())\n      .then((res) => {\n        console.log('CONNECTED!');\n        console.log(res.data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  if (loading) return <h1>Loading...</h1>;\n\n  return (\n    <div className=\"App\">\n      <Header\n        updateProgress={updateProgress}\n        user={user}\n        isLoggedIn={!user || Object.keys(user).length !== 0}\n        loginUser={loginUser}\n      />\n      <Container maxWidth=\"none\" sx={{ paddingTop: '2em' }}>\n        <Body\n          isLoggedIn={!user || Object.keys(user).length !== 0}\n          loginUser={loginUser}\n          user={user}\n          resetCounter={resetCounter}\n        />\n        <div style={{ position: 'fixed', bottom: 5, color: '#aaaaaa' }}>\n          <Typography variant=\"overline\">\n            © 2021 John Mabanta ·{' '}\n            <a\n              href=\"https://github.com/jmmabanta/moonlit\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              style={{ color: '#aaaaaa' }}\n            >\n              SOURCE CODE\n            </a>\n          </Typography>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}